<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.toiletissue.member.model.dao.MemberMapper">

    <!-- 매핑 규칙 -->
    <resultMap id="member" type="com.toiletissue.member.model.dto.MemberDTO">
        <id property="memberId" column="member_id"/>
        <result property="memberPwd" column="member_pwd"/>
        <result property="memberName" column="member_name"/>
        <result property="email" column="email"/>
        <result property="memberBdate" column="member_bdate"/>
        <result property="memberGender" column="member_gender"/>
        <result property="role" column="role"/>
        <result property="endStatus" column="end_status"/>
        <result property="endDate" column="end_date"/>
    </resultMap>

    <!-- 회원가입 -->
    <insert id="insertMember" parameterType="com.toiletissue.member.model.dto.MemberDTO">
        INSERT INTO
        member (
        member_id,
        member_pwd,
        member_name,
        email,
        member_bdate,
        member_gender,
        role,
        end_status,
        end_date
        ) VALUES (
        #{memberId},
        #{memberPwd},
        #{memberName},
        #{email},
        #{memberBdate},
        #{memberGender},
        #{role},
        #{endStatus},
        #{endDate}
        )
    </insert>

    <!-- 아이디 중복 확인 -->
    <select id="countById" parameterType="string" resultType="int">
        SELECT
        COUNT(*)
        FROM member
        WHERE member_id = #{memberId}
    </select>

    <!-- 로그인/단일조회 -->
    <select id="findById" parameterType="string" resultMap="member">
        SELECT
        member_id,
        member_pwd,
        member_name,
        email,
        member_bdate,
        member_gender,
        role,
        end_status,
        end_date
        FROM member
        WHERE member_id = #{memberId}
    </select>

    <!-- 전체조회 -->
    <select id="findAll" resultMap="member">
        SELECT
        member_id,
        member_pwd,
        member_name,
        email,
        member_bdate,
        member_gender,
        role,
        end_status,
        end_date
        FROM member
    </select>

    <!-- 이름 + 이메일로 아이디 찾기 -->
    <select id="findMemberIdByNameAndEmail" resultType="string">
        SELECT
        member_id
        FROM member
        WHERE member_name = #{memberName}
        AND email = #{email}
        LIMIT 1
    </select>

    <!-- 아이디 + 이름 + 이메일 존재 여부 확인 -->
    <select id="existsByIdNameEmail" resultType="int">
        SELECT
        COUNT(1)
        FROM member
        WHERE member_id = #{memberId}
        AND member_name = #{memberName}
        AND email = #{email}
    </select>

    <!-- 비밀번호 업데이트 (임시 비번 반영) -->
    <update id="updatePasswordByMemberId">
        UPDATE member
        SET member_pwd = #{encodedPwd}
        WHERE member_id = #{memberId}
    </update>

</mapper>